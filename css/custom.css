/* 滚动条样式 和选中文本颜色*/
::-webkit-scrollbar {
	width: 6px;
	height: 5px;
  }
  
  ::-webkit-scrollbar-track {
	background-color: rgba(73, 177, 245, 0.2);
	border-radius: 2em;
  }
  
  ::-webkit-scrollbar-thumb {
	background-color: #FF8F91;  /*启用内置代码主题代码块滚动条会不生效该颜色*/
	background-image: -webkit-linear-gradient(
	  45deg,
	  rgba(255, 255, 255, 0.4) 25%,
	  transparent 25%,
	  transparent 50%,
	  rgba(255, 255, 255, 0.4) 50%,
	  rgba(255, 255, 255, 0.4) 75%,
	  transparent 75%,
	  transparent
	);
	border-radius: 2em;
  }
  
  ::-webkit-scrollbar-corner {
	background-color: transparent;
  }
  
  ::-moz-selection { /*选中文本的颜色*/
	color: #fff;
	background-color: #FCA4D4;
  }

#page-header.nav-fixed #nav{
	background: rgba(246, 239, 246, 0.61) !important;
	backdrop-filter: blur(8px) !important;
}
[data-theme=dark]
#page-header.nav-fixed #nav{
	background: rgba(79, 76, 79, 0.35) !important;
	backdrop-filter: blur(8px) !important;
}

#nav .show{
	background: rgba(246, 239, 246, 0.61) !important;
	backdrop-filter: blur(8px) !important;
}
[data-theme=dark]
#nav .show{
	background: rgba(79, 76, 79, 0.35) !important;
	backdrop-filter: blur(8px) !important;
}

/*手机模式侧边栏*/
#sidebar #sidebar-menus.open{
	background:rgba(246, 239, 246, 0.75) !important;
	backdrop-filter: blur(3px);
	border-radius: 6px 0 0 6px;
}
[data-theme=dark]
#sidebar #sidebar-menus.open{
	background:rgba(252, 224, 252, 0.11) !important;
	backdrop-filter: blur(3px);
	border-radius: 6px 0 0 6px;
}
/*侧边控制按钮*/
#rightside > #rightside-config-show > #rightside_config,
#rightside > #rightside-config-show > #to_comment,
#rightside > #rightside-config-show > #go-up, 
#rightside > #rightside-config-show > #go-down,
#rightside > #rightside-config-hide > #readmode,
#rightside > #rightside-config-hide > #translateLink,
#rightside > #rightside-config-hide > #hide-aside-btn {
	background: opacity(0.3);
	backdrop-filter: blur(3px);
}
[data-theme=dark]
#rightside > #rightside-config-show > #rightside_config,
#rightside > #rightside-config-show > #to_comment,
#rightside > #rightside-config-show > #go-up,
#rightside > #rightside-config-show > #go-down,
#rightside > #rightside-config-hide > #readmode,
#rightside > #rightside-config-hide > #translateLink,
#rightside > #rightside-config-hide > #hide-aside-btn {
	background: opacity(0.3);
	backdrop-filter: blur(3px);
}
/*搜索*/
#local-search .search-dialog,
#local-search .search-dialog .local-search-box input{
	background:rgba(246, 239, 246, 0.75) !important;
	backdrop-filter: blur(3px);
	border-radius: 6px 6px;
}
[data-theme=dark]
#local-search .search-dialog,
#local-search .search-dialog .local-search-box input{
	background:rgba(252, 224, 252, 0.2) !important;
	backdrop-filter: blur(3px);
	border-radius: 6px 6px;
}

#footer {
    background: transparent !important; /*全透明，已选用*/
}

/* 半透明以及透明色，未选用，
#footer {
    background: rgba(255,255,255,.15);
    color: #000;
    border-top-right-radius: 20px;
    border-top-left-radius: 20px;
    backdrop-filter: saturate(100%) blur(5px)
}
#footer::before {
    background: rgba(255,255,255,.15)
}
*/
#footer #footer-wrap {
    color: var(--font-color);
}

#footer #footer-wrap a {
    color: var(--font-color);
}

(function fairyDustCursor() {

  var possibleColors = ["#D61C59", "#E7D84B", "#1B8798"]
  var width = window.innerWidth;
  var height = window.innerHeight;
  var cursor = {x: width/2, y: width/2};
  var particles = [];

  function init() {
    bindEvents();
    loop();
  }

  // Bind events that are needed
  function bindEvents() {
    document.addEventListener('mousemove', onMouseMove);
    document.addEventListener('touchmove', onTouchMove);
    document.addEventListener('touchstart', onTouchMove);

    window.addEventListener('resize', onWindowResize);
  }

  function onWindowResize(e) {
    width = window.innerWidth;
    height = window.innerHeight;
  }

  function onTouchMove(e) {
    if( e.touches.length > 0 ) {
      for( var i = 0; i < e.touches.length; i++ ) {
        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);
      }
    }
  }

  function onMouseMove(e) {
    cursor.x = e.clientX;
    cursor.y = e.clientY;

    addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);
  }

  function addParticle(x, y, color) {
    var particle = new Particle();
    particle.init(x, y, color);
    particles.push(particle);
  }

  function updateParticles() {

    for( var i = 0; i < particles.length; i++ ) {
      particles[i].update();
    }

    for( var i = particles.length -1; i >= 0; i-- ) {
      if( particles[i].lifeSpan < 0 ) {
        particles[i].die();
        particles.splice(i, 1);
      }
    }

  }

  function loop() {
    requestAnimationFrame(loop);
    updateParticles();
  }

  function Particle() {

    this.character = "*";
    this.lifeSpan = 120; //ms
    this.initialStyles ={
      "position": "fixed",
      "top": "0", //必须加
      "display": "block",
      "pointerEvents": "none",
      "z-index": "10000000",
      "fontSize": "20px",
      "will-change": "transform"
    };

    this.init = function(x, y, color) {

      this.velocity = {
        x:  (Math.random() < 0.5 ? -1 : 1) * (Math.random() / 2),
        y: 1
      };

      this.position = {x: x - 10, y: y - 20};
      this.initialStyles.color = color;
      console.log(color);

      this.element = document.createElement('span');
      this.element.innerHTML = this.character;
      applyProperties(this.element, this.initialStyles);
      this.update();

      document.body.appendChild(this.element);
    };

    this.update = function() {
      this.position.x += this.velocity.x;
      this.position.y += this.velocity.y;
      this.lifeSpan--;

      this.element.style.transform = "translate3d(" + this.position.x + "px," + this.position.y + "px,0) scale(" + (this.lifeSpan / 120) + ")";
    }

    this.die = function() {
      this.element.parentNode.removeChild(this.element);
    }

  }

  function applyProperties( target, properties ) {
    for( var key in properties ) {
      target.style[ key ] = properties[ key ];
    }
  }

  init();
})();

/* 全局默认鼠标指针 */
body,
html {
	cursor: url('./mouse/xxx.cur'),auto !important;
}
/* 悬停图片时的鼠标指针 */
img { 
	cursor: url('./mouse/xxx.cur'), auto !important;
}
/* 悬停图片弹出窗口时的鼠标指针 */
.fancybox__slide{
	cursor: url('./mouse/xxx.cur'), auto !important;
}
.carousel__slide{
	cursor: url('./mouse/xxx.cur'), auto !important;
}
/* 选择链接标签时的鼠标指针 */
a:hover,#site-name:hover {
    cursor: url('./mouse/xxx.cur'), auto !important;
}
/* 选择代码框展开和复制按钮时的鼠标指针 */
.copy-button:hover,.expand:hover {
    cursor: url('./mouse/xxx.cur'), auto !important;
}
/* 选中输入框时的鼠标指针 */
input:hover, textarea:hover {
    cursor: url('./mouse/xxx.cur'), auto;
}
/* 悬停按钮时的鼠标指针 */
button:hover,.scroll-down-effects:hover {
    cursor: url('./mouse/xxx.cur'), auto;
}
/* 悬停页脚链接标签（例如页脚徽标）时的鼠标指针 */
#footer-wrap a:hover {
    cursor: url('./mouse/xxx.cur'), auto;
}
/* 悬停页码时的鼠标指针 */
#pagination .page-number:hover {
    cursor: url('./mouse/xxx.cur'), auto;
}
/* 悬停菜单栏时的鼠标指针 */
#nav .site-page:hover {
    cursor: url('./mouse/xxx.cur'), auto !important;
}
/* 悬停滚动条的鼠标指针（只对Chrome有效） */
::-webkit-scrollbar:hover{
	cursor: url('./mouse/xxx.cur'), auto!important;
}
/* 悬停评论按钮的鼠标指针（我使用的是Gitalk/Valine） */
.switch-btn,.switch-btn:before,.gt-user-inner,.gt-ico,.gt-user-name,.gt-btn,.vbtn,svg,.at_button{
	cursor: url('./mouse/xxx.cur'), auto !important;
}
/* 悬停非链接文本时的鼠标指针 */
h1,h2,h3,h4,h5,h6,#subtitle,.content,.line,.post-content p,.post-content li{
	cursor: url('./mouse/xxx.cur'), auto;
}
/* 悬停文章日期 */
.post-meta-date:hover,.post-meta-date-created:hover{
	cursor: url('./mouse/xxx.cur'), auto!important;
}